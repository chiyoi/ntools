#!/bin/zsh
usage='usage: scr [<script> | <command>] [-- <args>]
    run a script like .../scripts/<script>.sh
    run command "list" if no arg provided
commands:
    help     - show this usage message
    list, ls - show a list of scripts
returns:
    0 - ok
    1 - usage error
    2 - script not exist
    3 - script exit with error
    4 - scripts dir not found'

# data
help=false
list=false
cmd=""
args=("")

# text
init() {
    if test $# -eq 0; then
        list=true
        return 0
    fi
    while test $# -gt 0; do
        case $1 in
            help | --help)
                help=true
                return 0
                ;;
            list | ls)
                list=true
                return 0
                ;;
            --)
                shift
                args=($@)
                return 0
                ;;
            *)
                if test -n "$cmd"; then
                    echo "more than one scripts are provided"
                    return 1
                fi
                cmd=$1
                ;;
        esac
        shift
    done
    test -z "$cmd" && return 1
    return 0
}

# main
init $@; err=$?
if test $err -ne 0; then
    test $err -eq 1 && echo $usage
    return $err
fi

if $help; then
    echo $usage
    return 0
fi

while test ! -d ./scripts; do
    if test $(pwd) = '/'; then
        echo 'scripts dir not found in current directory or any parent directory'
        return 4
    fi
    cd ..
done

tmpl="./scripts/%v.sh"

if $list; then
    pattern=$(echo $tmpl | sed -E 's/%v/*/g')
    search=$(echo $tmpl | sed -E 's/%v/(.*)/g')
    glob=$(find . -maxdepth 2 -path $pattern) || return 1
    if test -z $glob; then
        echo "no script found"
        return 0
    fi
    echo $glob | sed -E "s;$search;\\1;g"
    return 0
fi

fp=$(echo $tmpl | sed -E "s/%v/$1/g")

if test ! -f $fp; then
    echo "script not exist: $fp"
    return 2
fi

zsh $fp $args; err=$?
if test $err -ne 0; then
    echo "script exited with $err"
    return 3
fi
